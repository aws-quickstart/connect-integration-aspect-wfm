---
AWSTemplateFormatVersion: '2010-09-09'
Description: Alvaria WFM Agent Productivity Report Generator integration for Amazon
  Connect (qs-1ohjcidec)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Alvaria WFM Configuration
      Parameters:
      - FirehoseStreamName
      - AlvariaApDataS3Prefix
      - StatusSeparator
      - SignedOutStatuses
    - Label:
        default: Amazon Connect Configuration
      Parameters:
      - ConnectS3Bucket
      - ConnectS3Prefix
      - ConnectS3KmsArn
      - AgentEventStreamArn
      - AgentEventStreamKmsArn
    - Label:
        default: AWS Quick Start configuration
      Parameters:
        - QSS3BucketName
        - QSS3BucketRegion
        - QSS3KeyPrefix
    ParameterLabels:
      FirehoseStreamName:
        default: Alvaria Kinesis Firehose Stream Name
      AlvariaApDataS3Prefix:
        default: Alvaria WFM Report Prefix
      StatusSeparator:
        default: Agent Status Name Separator
      SignedOutStatuses:
        default: Signed-Out Agent Status Names
      ConnectS3Bucket:
        default: Amazon Connect Exported Reports Bucket
      ConnectS3Prefix:
        default: Amazon Connect Exported Reports Prefix
      ConnectS3KmsArn:
        default: Amazon Connect Exported Reports Bucket KMS Key ARN
      AgentEventStreamArn:
        default: Agent Event Kinesis Stream ARN
      AgentEventStreamKmsArn:
        default: Agent Event Kinesis Stream KMS Key ARN
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3BucketRegion:
        default: Quick Start S3 bucket region
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
Parameters:
  FirehoseStreamName:
    Type: String
    Default: aspect-wfm-ap-kda-to-s3
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-.]*[0-9a-zA-Z])*$
    Description: Enter the name of the Kinesis Firehose stream to create.  This
      string can include numbers, lowercase letters, uppercase letters, and hyphens
      (-). It cannot start or end with a hyphen (-).  If you have multiple Amazon
      Connect instances in your AWS account, you will need to create a Kinesis Firehose
      stream for each Amazon Connect instance and give each stream
      a unique name.  The name of the Kinesis Firehose stream determines the filenames 
      of agent productivity report files written to S3.  By default, WFM Adapter expects 
      the report files to be named based on a Kinesis Firehose stream name of "aspect-wfm-ap-kda-to-s3". 
      If you specify a different stream name, be sure to update the WFM Adapter configuration 
      for the corresponding data source to match your stream name, in the Firehose Report Mapping data
      source parameter.  Consult the WFM Adapter help for more information.
  AlvariaApDataS3Prefix:
    Type: String
    Default: OUTPUT/
    Description: Enter the prefix for Alvaria WFM Agent Productivity reports written
      to S3.  You should configure the corresponding WFM Adapter data source to match
      this value, in the Firehose Report Root Path data source parameter.
  StatusSeparator:
    Type: String
    Description: Character used to separate signed-out agents status names. You should configure a separator
      character that does not appear in any of the individual names.
    Default: ","
    MinLength: 1
    MaxLength: 1
  SignedOutStatuses:
    Type: String
    Description: Enter the list of agent status names for agent statuses that should be
      treated as signed-out in WFM. For example, an agent status named Break which agents
      use during a scheduled break would typically be listed here. Multiple signed-out
      agent status names may be listed. Names should be separated by the configured Agent
      Status Name Separator. The agent status with a Type of OFFLINE, by default named Offline,
      will always be treated as signed-out.
  ConnectS3Bucket:
    Type: String
    Description: Enter the name of the Exported reports S3 bucket of your Amazon Connect
      instance.
  ConnectS3Prefix:
    Type: String
    Default: connect/directory/Reports/Alvaria/
    Description: Enter the prefix under which the exported reports read by WFM Adapter
      will be exported, in the Exported reports bucket of your Amazon Connect instance.
  ConnectS3KmsArn:
    Type: String
    Description: Optional Amazon Resource Name (ARN) of the KMS key required to decrypt
      the exported reports of your Amazon Connect instance. You should supply this ARN
      if you configured your exported reports bucket to use server-side encryption with an
      AWS Key Management Service (KMS) key. Otherwise, you should leave this parameter
      blank.
  AgentEventStreamArn:
    Type: String
    Description: Enter the Amazon Resource Name (ARN) of the Amazon Kinesis Data Stream
      to which Amazon Connect delivers Agent Events.
  AgentEventStreamKmsArn:
    Type: String
    Description: Optional Amazon Resource Name (ARN) of the KMS key required to decrypt
      agent events. You should supply this ARN if you configured your Agent Event Kinesis
      stream to use server-side encryption with an AWS Key Management Service (KMS) key.
      Otherwise, you should leave this parameter blank.
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: 'The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.'
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: connect-integration-aspect-wfm/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
Rules:
  ParameterDefaults:
    Assertions:
    - Assert:
        Fn::Not:
        - Fn::Equals:
          - Ref: ConnectS3Prefix
          - connect/directory/Reports/Alvaria/
      AssertDescription: Replace directory with the directory name of your Amazon
        Connect instance.
Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  HasS3KmsKey: !Not [!Equals [!Ref ConnectS3KmsArn, '']]
  HasKinesisKmsKey: !Not [!Equals [!Ref AgentEventStreamKmsArn, '']]
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
  CopyZipsTemplate:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/lambda-copyzips/templates/copy-zips.template.yaml'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        QSS3BucketName: !Ref QSS3BucketName
        QSS3BucketRegion: !Ref QSS3BucketRegion
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        SourceObjects: "functions/packages/agent-productivity-update/lambda.zip,functions/packages/agent-productivity-kinesis/APKinesisLambda.zip"
  FirehoseRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service:
            - firehose.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
    DependsOn: S3Bucket
  FirehoseGluePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: glue
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
            - glue:GetTableVersions
          Resource: !Sub arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:table/*/*
      Roles:
      - Ref: FirehoseRole
  FirehoseS3Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: s3
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:AbortMultipartUpload
          - s3:GetBucketLocation
          - s3:GetObject
          - s3:ListBucket
          - s3:ListBucketMultipartUploads
          - s3:PutObject
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:s3:::${S3Bucket}
          - Fn::Sub: arn:${AWS::Partition}:s3:::${S3Bucket}/${AlvariaApDataS3Prefix}*
      Roles:
      - Ref: FirehoseRole
  FirehoseLogsPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: logs
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - logs:PutLogEvents
          - logs:CreateLogStream
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/kinesisfirehose/${OutputKinesisFirehose}:log-stream:*
      Roles:
      - Ref: FirehoseRole
  OutputKinesisFirehose:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName:
        Fn::Sub: ${FirehoseStreamName}
      DeliveryStreamType: DirectPut
      S3DestinationConfiguration:
        BucketARN:
          Fn::GetAtt: S3Bucket.Arn
        BufferingHints:
          IntervalInSeconds: 300
          SizeInMBs: 5
        CompressionFormat: UNCOMPRESSED
        Prefix:
          Fn::Sub: ${AlvariaApDataS3Prefix}
        RoleARN:
          Fn::GetAtt: FirehoseRole.Arn
  UpdateLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: CreateLogs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: !Sub arn:${AWS::Partition}:logs:*:*:*
      - PolicyName: WriteToFirehose
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - firehose:PutRecord
            Resource:
            - Fn::GetAtt: OutputKinesisFirehose.Arn
  FirehoseUpdateLambda:
    Type: AWS::Lambda::Function
    DependsOn:
      - CopyZipsTemplate
    Properties:
      Description: Periodically write to Agent Productivity firehose stream to ensure
        that files are created
      Code:
        S3Bucket: !GetAtt CopyZipsTemplate.Outputs.LambdaZipsBucket
        S3Key: !Sub '${QSS3KeyPrefix}functions/packages/agent-productivity-update/lambda.zip'
      Environment:
        Variables:
          firehose_stream_name:
            Ref: OutputKinesisFirehose
      Handler: update.lambda_handler
      Runtime: python3.9
      Role:
        Fn::GetAtt: UpdateLambdaRole.Arn
  UpdateLambdaVersion:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName:
        Ref: FirehoseUpdateLambda
      Description: Official version of Firehose Update Lambda
  ScheduledEvent:
    Type: AWS::Events::Rule
    Properties:
      Description: Call Agent Productivity Firehose update Lambda every 5 minutes
      ScheduleExpression: rate(5 minutes)
      State: ENABLED
      Targets:
      - Arn:
          Fn::GetAtt: FirehoseUpdateLambda.Arn
        Id:
          Fn::GetAtt: UpdateLambdaVersion.Version
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt: FirehoseUpdateLambda.Arn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt: ScheduledEvent.Arn
  KinesisLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaKinesisExecutionRole'
  KinesisLambdaWriteOutputFirehosePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: KinesisLambda_WriteOutputFirehose
      Roles:
      - !Ref KinesisLambdaRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - firehose:DescribeDeliveryStream
          - firehose:PutRecord
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:firehose:${AWS::Region}:${AWS::AccountId}:deliverystream/${OutputKinesisFirehose}
  KinesisLambdaFunction:
    Type: AWS::Lambda::Function
    DependsOn:
      - CopyZipsTemplate
    Properties:
      Handler: >-
        APKinesisLambda::APKinesisLambda.FilterAgentEvents::APKinesisHandler
      Runtime: dotnet6
      Code:
        S3Bucket: !GetAtt CopyZipsTemplate.Outputs.LambdaZipsBucket
        S3Key: !Sub '${QSS3KeyPrefix}functions/packages/agent-productivity-kinesis/APKinesisLambda.zip'
      Description: Classifies agent events as signed-in, signed-out, or available time. Relevant information
        is parsed out of the agent event and written in a CSV line to the Kinesis Firehose stream.
      MemorySize: 256
      Timeout: 30
      Role: !GetAtt KinesisLambdaRole.Arn
      Environment:
        Variables:
          FirehoseStreamName: !Ref FirehoseStreamName
          AgentStatusSeparator: !Ref StatusSeparator
          SignedOffAgentStatuses: !Ref SignedOutStatuses
          VerboseLogging: 'false'
  LambdaKinesisStream:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn:
        Ref: AgentEventStreamArn
      FunctionName: !Ref KinesisLambdaFunction
      StartingPosition: LATEST
  WFMAdapterUser:
    Type: AWS::IAM::User
  WFMAdapterReadS3Policy:
    Type: AWS::IAM::Policy
    DependsOn:
    - S3Bucket
    Properties:
      PolicyName: WFMAdapter_ReadS3Policy
      Users:
      - !Ref WFMAdapterUser
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:GetObject
          - s3:ListBucket
          Resource:
          - Fn::GetAtt: S3Bucket.Arn
          - Fn::Sub: ${S3Bucket.Arn}/${AlvariaApDataS3Prefix}*
          - Fn::Sub: arn:${AWS::Partition}:s3:::${ConnectS3Bucket}
          - Fn::Sub: arn:${AWS::Partition}:s3:::${ConnectS3Bucket}/${ConnectS3Prefix}*
  WFMAdapterDecryptS3Policy:
    Condition: HasS3KmsKey
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: WFMAdapter_DecryptS3Policy
      Users:
      - !Ref WFMAdapterUser
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - kms:Decrypt
          - kms:GenerateDataKey
          - kms:DescribeKey
          Resource:
          - !Ref ConnectS3KmsArn
Outputs:
  APS3BucketName:
    Value: !Ref S3Bucket
  APUpdateLambdaFunctionName:
    Value: !Ref FirehoseUpdateLambda
  APKinesisLambdaFunctionName:
    Value: !Ref KinesisLambdaFunction
  WFMAdapterUserName:
    Value: !Ref WFMAdapterUser
